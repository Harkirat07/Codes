#include<bits/stdc++.h>
using namespace std;

int max_subarray(int a[], int n)
{
    int sum =0;
    if(n==1)
        return a[0];
        for(int i=0;i<n;i++)
            sum += a[i];
    int max_so_far=a[0],current_max=a[0],min_so_far=a[0],current_min=a[0];
    for(int i=1;i<n;i++)
    {
        current_max=max(a[i],current_max+a[i]);
        max_so_far = max(max_so_far,current_max);

        current_min=min(a[i],current_min+a[i]);
        min_so_far=min(min_so_far,current_min);
    }
    if(sum==min_so_far)
        return max_so_far;

    return max(max_so_far,sum-min_so_far);
}

int main()
{
     int a[] = { 11, 10, -20, 5, -3, -5, 8, -13, 10 };
    int n = sizeof(a) / sizeof(a[0]);
    cout << "Maximum circular sum is " << max_subarray(a, n) << endl;
    return 0;
}
